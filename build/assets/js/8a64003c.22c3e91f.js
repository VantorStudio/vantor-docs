"use strict";(self.webpackChunkvantor=self.webpackChunkvantor||[]).push([[3074],{8358:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"getting-started/setting-up-devenv","title":"Setting up your Environment","description":"This guide will walk you through setting up your development environment for Vantor Engine, including cloning the engine with all its dependencies and creating your first project.","source":"@site/docs/getting-started/setting-up-devenv.mdx","sourceDirName":"getting-started","slug":"/getting-started/setting-up-devenv","permalink":"/docs/getting-started/setting-up-devenv","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"setting-up-devenv","title":"Setting up your Environment","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installing the Dependencies","permalink":"/docs/getting-started/installing-dependencies"},"next":{"title":"Building Your Project","permalink":"/docs/getting-started/building-your-project"}}');var i=r(4848),o=r(8453);const s={id:"setting-up-devenv",title:"Setting up your Environment",sidebar_position:2},l="Setting up your Environment",c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Cloning Vantor Engine",id:"cloning-vantor-engine",level:2},{value:"Project Structure Setup",id:"project-structure-setup",level:2},{value:"1. Create the Source Folder",id:"1-create-the-source-folder",level:3},{value:"3. Create CMakeLists.txt",id:"3-create-cmakeliststxt",level:3},{value:"4. Create main.cpp",id:"4-create-maincpp",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"IDE Setup",id:"ide-setup",level:2},{value:"Visual Studio Code",id:"visual-studio-code",level:3},{value:"CLion",id:"clion",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"setting-up-your-environment",children:"Setting up your Environment"})}),"\n",(0,i.jsx)(n.p,{children:"This guide will walk you through setting up your development environment for Vantor Engine, including cloning the engine with all its dependencies and creating your first project."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"Before you begin, make sure you have the following installed on your system:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Git"})," - Version control system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CMake"})," - Build system (version 3.16 or higher recommended)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Make and a C++ compiler"})," - GCC, Clang, or MSVC with C++20 support"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python 3"})," - For build scripts and tools"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Before you clone, make a new project folder where your project will be an change into that directoy"})}),"\n",(0,i.jsx)(n.h2,{id:"cloning-vantor-engine",children:"Cloning Vantor Engine"}),"\n",(0,i.jsxs)(n.p,{children:["Vantor Engine uses git submodules for managing dependencies. To clone the repository with all its submodules, use the ",(0,i.jsx)(n.code,{children:"--recursive"})," flag:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone --recursive https://github.com/LukasRennhofer/Vantor.git\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["If you've already cloned the repository without the ",(0,i.jsx)(n.code,{children:"--recursive"})," flag, you can initialize and update the submodules with:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git submodule update --init --recursive\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"project-structure-setup",children:"Project Structure Setup"}),"\n",(0,i.jsx)(n.p,{children:"Once you have Vantor Engine cloned, you'll need to create your project structure. Here's how to set up a basic project:"}),"\n",(0,i.jsx)(n.h3,{id:"1-create-the-source-folder",children:"1. Create the Source Folder"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"Source"})," folder to contain your source code:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir Source\nmkdir Build\n"})}),"\n",(0,i.jsx)(n.p,{children:"Your project structure should now look like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"MyVantorProject/\n\u251c\u2500\u2500 Vantor/\n\u251c\u2500\u2500 Source/\n\u251c\u2500\u2500 Build/\n\u2514\u2500\u2500 CMakeLists.txt (we'll create this next)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-create-cmakeliststxt",children:"3. Create CMakeLists.txt"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:"CMakeLists.txt"})," file in your project root with the following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmake",metastring:'title="CMakeLists.txt"',children:"cmake_minimum_required(VERSION 3.10)\n\n# Include CMake build files\ninclude(Vantor/Vantor/CMake/VantorCMake.cmake)\n\nproject(MyVantorProject) # Replace this with your project name\nset(CMAKE_CXX_STANDARD 20)\n\n# Add engine subdirectory\nadd_subdirectory(Vantor/Vantor/Source ${CMAKE_BINARY_DIR}/VantorBuild)\n\n# Add Source Code of project\nadd_executable(MyVantorProject Source/main.cpp)\n\n# Set up Project Target for Vantor\nSetUpVantorTarget(MyVantorProject)\n\n# Include Engine API Includes\ntarget_include_directories(MyVantorProject PRIVATE Vantor//Vantor/Include)\n\n# Link with Vantor\ntarget_link_libraries(MyVantorProject PRIVATE Vantor)\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Make sure to ajdust the path of the Engine, according to your own environment."})}),"\n",(0,i.jsx)(n.h3,{id:"4-create-maincpp",children:"4. Create main.cpp"}),"\n",(0,i.jsxs)(n.p,{children:["Create your main application file in the ",(0,i.jsx)(n.code,{children:"Source"})," folder"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"touch Source/main.cpp\n"})}),"\n",(0,i.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,i.jsx)(n.p,{children:"Here's a typical development workflow when working with Vantor Engine:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Make changes"})," to your source code in the ",(0,i.jsx)(n.code,{children:"Source"})," folder"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Build"})," your project using ",(0,i.jsx)(n.code,{children:"cmake"})," from the build directory"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test"})," your changes by running the executable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Debug"})," using your preferred debugger or IDE"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"ide-setup",children:"IDE Setup"}),"\n",(0,i.jsx)(n.h3,{id:"visual-studio-code",children:"Visual Studio Code"}),"\n",(0,i.jsxs)(n.p,{children:["For VS Code users, create a ",(0,i.jsx)(n.code,{children:".vscode/settings.json"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title=".vscode/settings.json"',children:'{\n    "cmake.buildDirectory": "${workspaceFolder}/Build",\n    "cmake.sourceDirectory": "${workspaceFolder}",\n    "files.associations": {\n        "*.h": "cpp",\n        "*.cpp": "cpp"\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"clion",children:"CLion"}),"\n",(0,i.jsx)(n.p,{children:"CLion should automatically detect your CMakeLists.txt file and configure the project."}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Submodule not found errors:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Make sure you cloned with ",(0,i.jsx)(n.code,{children:"--recursive"})," or ran ",(0,i.jsx)(n.code,{children:"git submodule update --init --recursive"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Build errors:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check that you have a C++20 compatible compiler"}),"\n",(0,i.jsx)(n.li,{children:"Verify all dependencies are properly installed"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Runtime errors:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check that assets are copied to the correct output directory"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);